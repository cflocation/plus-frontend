<?php	class Message{		protected $con;		protected $userid;		protected $tokenid;		//build the basic information about the logged in user		public function __construct($con, $userid, $tokenid){			$this->con 		= $con;			$this->userid 	= $userid;			$this->tokenid = $tokenid;		}		//GETS USER LIST OF MESSAGES		public function listing(){						$sql = "SELECT messages.id, 					messages.sendid, 					messages.userid, 					messages.type, 					messages.subject, 					messages.message, 					messages.hasread, 					messages.createdat, 					messages.updatedat, 					messages.deletedat,					CONCAT_WS(' ',users.firstname,users.lastname) AS sentfrom				FROM users INNER JOIN messages ON users.id = messages.sendid				WHERE messages.userid = {$this->userid} AND messages.deletedat IS NULL				ORDER BY messages.createdat DESC";					$result 		= mysqli_query($this->con, $sql);				$num_rows 	= mysqli_num_rows($result);				if($num_rows == 0){					$search =  array();				}							while ($row = mysqli_fetch_assoc($result)) {			    	$search[] = $row;				}							return $search;		}		//MARK MESSAGES ARE READ		public function markasread($id){					$sql = "UPDATE messages SET hasread = 1 WHERE id = ".$id;			$result = mysqli_query($this->con, $sql);			return ;		}		//DELETE MESSAGES		public function delete($rows){			$rows = json_decode($rows);			foreach ($rows as &$value) {				$sql = "DELETE FROM messages WHERE id = {$value->id}";				$result = mysqli_query($this->con, $sql);			}			return;				}		// IMPORT SAVED SEARCH		public function importsearch($id){					$d 		= date('Y-m-d H:i:s');					$sql 		= "SELECT * FROM messages WHERE id = ".$id." LIMIT 1";			$result 	= mysqli_query($this->con, $sql);			$array 	= mysqli_fetch_assoc($result);							$sql 		= "SELECT * FROM savesearches WHERE id = ".$array['content']." LIMIT 1";			$result 	= mysqli_query($this->con, $sql);			$array 	= mysqli_fetch_assoc($result);					$name 	= $array['name'].': IMPORTED';			$notes 	= $array['notes'];			$search 	= mysqli_real_escape_string($this->con, $array['search']);			$type 	= $array['type'];			$filters = $array['filters'];					$sql = "INSERT INTO savesearches (usersid, name, notes, search, type, filters, createdat, updatedat)			VALUES ({$this->userid}, '{$name}','{$notes}','{$search}','{$type}','{$filters}','{$d}','{$d}')";			mysqli_query($this->con, $sql);						return ;				}		// IMPORT SAVED PROPOSALS		public function importproposals($id){			$d 			= date('Y-m-d H:i:s');			$sql 		= "SELECT * FROM messages WHERE id = ".$id." LIMIT 1";			$result 	= mysqli_query($this->con, $sql);			$array 		= mysqli_fetch_assoc($result);					$name 		= $array['subject'].': IMPORTED';			$proposal 	= mysqli_real_escape_string($this->con, $array['content']);			$name 		= mysqli_real_escape_string($this->con, $name);			$weeks 		= '[]';			$stats = $this->parseJsonToStats($array['content']);						$sql = "INSERT INTO proposals (userid, 											name, 											proposal, 											calendar,											weeks, 											createdat, 											updatedat, 											zones,											spots,											linesttl,											startdate,											enddate,											grossttl)					VALUES (				{$this->userid}, 											'{$name}',											'{$proposal}',											'1',											'{$weeks}',											'{$d}',											'{$d}',											'{$stats['zone']}',											'{$stats['spots']}',											'{$stats['lines']}',											'{$stats['fstart']}',											'{$stats['fend']}',											'{$stats['total']}')";			mysqli_query($this->con, $sql);									return ;		}								// SEND=SHARE SAVED SEARCHES		function sendsearch($items, $type,$message,$users){			$d 			= date('Y-m-d H:i:s');					$message 	= mysqli_real_escape_string($this->con, $message);			$sendid 		= $sendid;			foreach ($items as &$value) {				$subject = $value->name;				$id 		= $value->id;						$sql 		= "SELECT * FROM savesearches WHERE id = ".$id." LIMIT 1";				$result 	= mysqli_query($this->con, $sql);				$array 	= mysqli_fetch_assoc($this->con, $result);				$content = $id;						foreach ($users as &$xvalue) {					$userid = $xvalue->id;					$sql = "INSERT INTO messages (sendid, userid, type, subject, message, content, createdat, updatedat)					VALUES ({$this->userid}, '{$userid}','Search','{$subject}','{$message}','{$content}','{$d}','{$d}')";					mysqli_query($this->con, $sql);				}			}			return ;					}						// SEND=SHARE PROPOSALS						public function sendproposals($items, $type, $message, $users){					$d 			= date('Y-m-d H:i:s');									//set the message			$message = $this->con->real_escape_string($message);			foreach ($items as &$item) {				$subject = $item->name;				$subject = $this->con->real_escape_string($subject);								$id = $item->id;								$sql = "SELECT * FROM proposals WHERE id = ".$id." LIMIT 1";				$result = mysqli_query($this->con, $sql);				//get the proposal info from the database				$data = $result->fetch_assoc();				//proposal				$content = $this->con->real_escape_string($data['proposal']);				foreach ($users as &$user) {					$userid = $user->id;					$sql = "INSERT INTO messages (sendid, userid, type, subject, message, content, createdat, updatedat)					VALUES ($this->userid, $userid,'Proposal','{$subject}','{$message}','{$content}','{$d}','{$d}')";					$result = mysqli_query($this->con, $sql);				}			}		}								public function parseJsonToStats($data){			$proposal = json_decode($data);				$spots = 0;			$lines = 0;			$total = 0;			$zones = array();			$dates = array();						foreach ($proposal as &$value) {				$total += $value->rate*$value->spots;				$spots += $value->spots;				$lines += 1;									$x = date('Ymd', strtotime($value->startdate));				$xl = date('Y-m-d H:i:s', strtotime($value->startdatetime));						$xe = date('Ymd', strtotime($value->enddate));				$xle = date('Y-m-d H:i:s', strtotime($value->enddatetime));					$dates[$x] = $xl;				$dates[$xe] = $xle;						array_push($zones,$value->zone);			}						$zones1 = array_unique($zones);						asort($zones1);						$z = implode(", ", $zones1);								ksort($dates);						$ttl = count($dates);				if($ttl == 0){				$fstart = '';				$fend = '';			}else{				$fstart = current($dates);				$fend = end($dates);			}				$re = array("spots" => $spots,"lines" => $lines,"total" => $total,"zone" => $z, "fstart" => $fstart, "fend" => $fend);			return $re;		}											}?>