<?phpfunction createAssets(&$objPHPPowerPoint, $arrUser, $theseassets, $arrNetworks){		$currentSlide = createTemplatedSlide($objPHPPowerPoint, $arrUser, '0');	$assets		= $theseassets;			$imgnum 	= count($assets);		//if($arrUser['corporationId'] != 15){//Spectrum Reach background		$background = '/bkground.png';	/*}	else{		if($imgnum < 13){			$background = '/bkground.png';		}		else{			$background = '/bkground0.png';					}	}*/	//if( ($arrUser['corporationId'] != 15 && $imgnum < 13 ) || ($arrUser['corporationId'] == 15)){        	$currentSlide->createDrawingShape()          ->setName('Background')          ->setDescription('Background')          ->setPath(getcwd().'/ppt.sr/corps/'.$arrUser["corporationId"].$background)          ->setWidth(955)          ->setHeight(720)          ->setOffsetX(0)          ->setOffsetY(0);          	//}	$assets		= $theseassets;			$imgnum 	= count($assets);		if($imgnum > 5 && $imgnum < 11){		$numCols 	= 5;				//Number of image columns		$div_x		= 800/5;		$comp 		= 85;				}	elseif($imgnum > 10 && $imgnum < 19){		$numCols 	= 6;		$div_x		= 900/6;		$comp 		= 30;	}	else{		$numCols 	= $imgnum;		$div_x		= 950/$imgnum;		$comp 		= 5;	}	//calculating and adjusting number of rows	$numRows 	= ceil($imgnum / 6);		if($numRows > 3){		$numRows = 3;	}		$verticalspace = 45;	//setting up image sizes (height and width)	if($numRows == 1 && $imgnum < 5){		$imgH		= 342;				$imgW		= 228;		$logosize	= 50;	}		elseif($numRows == 1 && $imgnum == 5){		$imgH		= 270;				$imgW		= 180;		$logosize	=  30;		}	elseif($numRows == 1 && $imgnum == 6){		$imgH		= 241;				$imgW		= 155;		$logosize	=  25;		}	elseif($numRows == 2){		$imgH		= 227;				$imgW		= 151;		$logosize	= 25;		}	else{		$imgH		= 180;				$imgW		= 120;				$logosize	= 20;					}		$pos_x	=	$delta	= ($div_x - $imgW)/2;	$pos_y	=  	$y		= 130-(($numRows-1)*20);	if($imgnum < 5){		$pos_y	=  	$y		= 139;		}	elseif($imgnum == 5){		$pos_y	=  	$y		= 185;		}	if($imgnum == 6){ //EXCEPTION TO MAX THE IMAGE SIZE		$pos_y	=  	$y	= 90-(($numRows-1)*20);	}	//if($arrUser['corporationId'] != 15 && $imgnum > 12 ){	if($imgnum > 12 ){		$pos_y		= $y = 150-(($numRows-1)*45);			$imgH		= 153;				$imgW		= 102;				$logosize	= 20;				}	/*}	elseif($imgnum > 12){		$pos_y	=  	$y	= 10;				$verticalspace  = 30;	}*/	$c		=	$r		=  	$n = 0;				$x 		= 	$pos_x + $comp;	if($imgnum < 13 && $arrUser['corporationId'] == 46){			$shape = $currentSlide->createRichTextShape();		$shape->setHeight(30);		$shape->setWidth(950);		$shape->setOffsetX(5);		$shape->setOffsetY(20);		$shape->getActiveParagraph()->getAlignment()->setHorizontal( PHPPowerPoint_Style_Alignment::HORIZONTAL_CENTER );		$shape->createTextRun('Featured in this Proposal')->getFont()->setSize(15)->setColor( new PHPPowerPoint_Style_Color( 'ffffffff' ) );	}	foreach($assets as $k => $value){					$n++;		$thiskey 	= array_keys((array)$value);				$station 	= $thiskey[0];		$thiscover  = str_replace(' ', '', $value->$thiskey[0]->cover);		$trailer	= $value->$thiskey[0]->trailer;		$showType	= $value->$thiskey[0]->showType;					$tmpfile 	= (string)$n.'.jpg';		$ccopy 		= copy($thiscover, getcwd().'/ppt.sr/assets/'.$tmpfile);		if($showType == 'mv'){			$trailerIcon = getcwd().'/ppt.sr/i/film.png';		}		else{//Clip			$trailerIcon 	 = getcwd().'/ppt.sr/i/play.png';		}     	$netlogo 	= $currentSlide     					->createDrawingShape()						->setPath(getcwd().'/ppt.sr/assets/'.$tmpfile)						->setHeight($imgH)						->setWidth($imgW)						->setOffsetX($x)						->setOffsetY($y);		$logo	= '';        foreach($arrNetworks as $network){            if(trim($network['networkId'])==$station){				$imgPath 	= str_replace('/downloads','',getcwd());				$logo 	 	= $imgPath.'/i/networklogos/'.$network['filename'];            }        } 		if($trailer == 'undefined' && $trailer == ''){			if($numRows == 3){				$x_logo = $x +25;								}			elseif($numRows == 2){				$x_logo = $x +40;								}			else{				$x_logo = $x + 100;								}												}		else{			$x_logo = $x + ($imgW/2-($logosize+10));		}		if (file_exists($logo)) {			$netlogo = $currentSlide->createDrawingShape()									->setPath($logo)									->setHeight($logosize)									->setWidth($logosize)									->setOffsetX($x_logo)									->setOffsetY($y + $imgH+1);		} 		else{			$shape = $currentSlide->createRichTextShape();			$shape->setHeight(30);			$shape->setOffsetX($x_logo);							$shape->setOffsetY($y + $imgH+1);			$shape->getActiveParagraph()->getAlignment()->setHorizontal( PHPPowerPoint_Style_Alignment::HORIZONTAL_CENTER );								$shape->setWidth(90);			$mvtrailer = $shape->createTextRun('');								$mvtrailer->getFont()->setName('Verdana')->setBold(true)->setSize(10)->setColor( new PHPPowerPoint_Style_Color( '33333333' ) );			}		if($trailer != ''){			$mvtrailer = $currentSlide->createDrawingShape()									->setPath($trailerIcon)									->setHeight($logosize*.7)									->setWidth($logosize*.7)									->setOffsetX($x_logo+$logosize+20)									->setOffsetY($y + $imgH + ($logosize*.5-$logosize*.28));			$mvtrailer->getHyperlink()->setUrl('https://plus.showseeker.com/goplus/player/trailer.php?url='.urlencode($trailer))->setTooltip('Watch Trailer'); 		}				//increments		if($c < $numCols-1){			$x = ($c+1) * $div_x + $delta + $comp;			$c++;		}		else{			$x = 	$pos_x + $comp;			$y =	$y + $imgH + $verticalspace;								$c = 	0;		}	}	return $currentSlide;}function convertImage($originalImage, $outputImage, $quality){    $exploded 	= explode('.',$originalImage);    $ext 		= $exploded[count($exploded) - 1];     if (preg_match('/jpg|jpeg/i',$ext))        $imageTmp=imagecreatefromjpeg($originalImage);    else if (preg_match('/png/i',$ext))        $imageTmp=imagecreatefrompng($originalImage);    else if (preg_match('/gif/i',$ext))        $imageTmp=imagecreatefromgif($originalImage);    else if (preg_match('/bmp/i',$ext))        $imageTmp=imagecreatefrombmp($originalImage);    else        return 0;    // quality is a value from 0 (worst) to 100 (best)    imagejpeg($imageTmp, $outputImage, $quality);    imagedestroy($imageTmp);    return 1;}?>