<?phpset_include_path(get_include_path() . PATH_SEPARATOR . 'Classes/');if(isset($_GET['numberOfLines'])){	$linesinslide 	= $_GET['numberOfLines'];}else{	$linesinslide 	= 8;	}$includeDesc 	= $_GET['description'];$onlyfixed 		= $_GET['onlyfixed'];if(isset($_GET['calendar'])){	$calendar 		= $_GET['calendar'];}else{	$calendar 		= false;	}/** PHPPowerPoint */include 'PHPPowerPoint.php';include 'ppt.sr/includes/assets.php';include 'ppt.sr/includes/columnheader.php';include 'ppt.sr/includes/totals.php';include 'ppt.sr/includes/userinfo.php';if($linesinslide == 7){//this condition applies to CoxMedia	include 'ppt.sr/includes/proposallinestightened.php';}else{		include 'ppt.sr/includes/proposallines.php';}include 'ppt.sr/includes/proposalname.php';include 'ppt.sr/includes/slideone.php';include 'ppt.sr/includes/terms/selector.php';include 'ppt.sr/includes/zonelabel.php';include 'ppt.sr/includes/zonetotals.php';if(php_sapi_name() == 'cli' && empty($_SERVER['REMOTE_ADDR'])) {	define('EOL', PHP_EOL);}else {	define('EOL', '<br />');}//GETTING PROPOSAL DATArequire_once 'proposal.data.goPlus.php';require_once 's3/upload.php';// decode proposal data$proposalLines = json_decode($json_data,true);// decoding proposal array$arrProposal 	= $proposalLines['proposal'];// decoding user array$arrUser		= $proposalLines['user'];// decoding proposal info array$arrPslInfo		= $proposalLines['proposalinfo'];// proposal totals$arrTotals 		= $proposalLines['totals'];// network logos$arrNetworks 	= $proposalLines['networks'];//BROADCAST CALENDAR TOTALS$arrBcTotals 	= $proposalLines['brodmonthstotal'];$arrayBcTotals 	= $proposalLines['brodmonthstotal'];//STANDARD CALENDARD TOTALS$arrScTotals 	= $proposalLines['calmonthstotal'];// Create new PHPPowerPoint object$objPHPPowerPoint = new PHPPowerPoint();// Cleaning up folder of assets$files = glob('ppt.sr/assets/*'); // get all file namesforeach($files as $file){ // iterate files  if(is_file($file))    unlink($file); // delete file}// Set properties$objPHPPowerPoint->getProperties()->setCreator('VAST ShowSeeker')								  ->setLastModifiedBy('VAST ShowSeeker')								  ->setTitle('Office 2007 Proposal')								  ->setSubject('Office 2007 Proposal')								  ->setDescription('Office 2007 PPTX Proposal')								  ->setKeywords('office 2007 openxml')								  ->setCategory('ShowSeeker Proposal');// Remove first slide$objPHPPowerPoint->removeSlideByIndex(0);// Create First Slide$currentSlide = createFirstSlide($objPHPPowerPoint, $arrUser, $arrPslInfo); // local function	// Create Assets Slide		if(isset($_GET['assets'])){		$theseassets =  json_decode($_GET['assets']);		if($theseassets){			$slideOfAssets = createAssets($objPHPPowerPoint, $arrUser, $theseassets, $arrNetworks);		}	}				// STATION LOGO COORDINATES	if($arrUser['corporationId'] != 10 && $arrUser['corporationId'] != 5){//this contion applies to Cox and Viamedia		$rowheight 	= ceil(500/$linesinslide);	}	else{		$rowheight 	= ceil(450/$linesinslide);	}	$logosize  		= 45 - (5*($linesinslide - 8));	$logo_x 	  	= (80-$logosize)/2;	$logo_y 	  	= ($rowheight-$logosize)/2;	$logodelta 		= ($rowheight-$logosize)/2;		/*if($arrUser['corporationId'] != 15){		$absolute_y 	= 160;	}	else{*/		$absolute_y 	= 143;		//}		// COUNTING NUMBER OF ZONES	for($i=0; $i<count($arrProposal); $i++){		$definitiveLines = array();				if($onlyfixed == 'true'){			foreach ($arrProposal[$i]['lines'] as $line){				if($line['linetype'] == 'Fixed'){					$definitiveLines[] = $line;				}			}		}		else{			$definitiveLines = $arrProposal[$i]['lines'];		}						$numLines 		= count($definitiveLines);		$numSlides 		= $numLines / $linesinslide;		$numSlides 		= ceil($numSlides);		$spotsByZone 	= 0;		$totalByZone 	= 0.0;		//NUMBER OF SLIDES PER ZONE		for($j=0; $j<$numSlides; $j++){						$linnum = 0;				// CREATING NEW SLIDE			$currentSlide = createTemplatedSlide($objPHPPowerPoint, $arrUser, '1'); // local function							$headerOflines = createZoneLabel($currentSlide, $definitiveLines[0]['zone'],$arrUser['corporationId']);					// CREATING TABLE THAT WILL HOLD THE LINES			if($linesinslide == 7){//this condition applies to CoxMedia						$shape = $currentSlide->createTableShape(8);				$shape->setHeight(400);					$shape->setWidth(950);				$shape->setOffsetX(25);				/*if($arrUser['corporationId'] != 15){					$shape->setOffsetY(130);									}				else{*/					$shape->setOffsetY(110);								//}					// CREATES THE COLUMN HEEADER				$row = $shape->createRow();				$colHeader = createColumnHeader($row,80);				}			else{				$shape = $currentSlide->createTableShape(8);				$shape->setHeight(400);					$shape->setWidth(970);				$shape->setOffsetX(5);				/*if($arrUser['corporationId'] != 15){					$shape->setOffsetY(130);									}				else{*/					$shape->setOffsetY(115);								//}								// CREATES THE COLUMN HEEADER				$row = $shape->createRow();				if($arrUser['corporationId'] != 15){					$colHeader = createColumnHeader($row,125);					}				else{					$colHeader = createColumnHeaderSpectrum($row,125);									}			}						//LOPPING OVER LINES			$linesend = $j*$linesinslide+$linesinslide;						if($linesend >= $numLines){				$linesend = $numLines;			}			for($n=$j*$linesinslide; $n<$linesend; $n++){								$thisline 	= $definitiveLines[$n];						$activeLine = $thisline['lineactive'];							if($activeLine == 1){					$daypartis = $thisline['dayFormat'].' '.str_replace('M','',str_replace(':00','',date ('g:iA',strtotime($thisline['starttime'])))).'-'.str_replace('M','',str_replace(':00','',date ('g:iA',strtotime($thisline['endtime']))));					//position logos					$y = $absolute_y + ($rowheight*$linnum);					// CREATING PROPOSAL LINE					$row 			= $shape->createRow();					$pslLine		= createProposalLine($row, $thisline, $arrNetworks, $currentSlide, $y, $rowheight, $logosize, $logo_x, $logo_y, $includeDesc, $linesinslide);					$lineBorder 	= createBottomLn($row);							$spotsByZone 	= $spotsByZone + $thisline['spots'];					$totalByZone 	= $totalByZone + ($thisline['spots']*$thisline['rate']);				}				$linnum++;						}		}			// TOTALS OF THE ZONE		/*if($arrUser['corporationId'] != 15){			$row 			= $shape->createRow();			$znTotal  	= createZoneTotal($row, $spotsByZone, $totalByZone);		}*/}// Create TOTALS SLIDE$currentSlide  = createTemplatedSlide($objPHPPowerPoint, $arrUser, '1'); // local function//$pslName 		= createProposalName($currentSlide, $arrPslInfo);// totals by month and signatureif($calendar == 'false' || $calendar == false){		$pslTotals = createTotals($currentSlide, $arrayBcTotals, $arrTotals,$arrUser['corporationId'],$includetc,'Broadcast'); }else{	$pslTotals = createTotals($currentSlide, $arrScTotals, $arrTotals,$arrUser['corporationId'],$includetc,'Standard'); }// Terms and Conditionsif($includetc == 'true'){	$tc = create_terms_and_conditions($objPHPPowerPoint, $arrUser['corporationId'], $arrPslInfo, $arrTotals);}//include 'ppt.sr/includes/log.php';// Save PowerPoint 2007 file$objWriter = PHPPowerPoint_IOFactory::createWriter($objPHPPowerPoint, 'PowerPoint2007');$pslFileName = cleanStr($arrPslInfo['name']);$s3FileName = $pslFileName.'.pptx';$s3FilePath = "/var/www/html/www.showseeker.com/goplus/downloads/xmls/$s3FileName";$objWriter->save($s3FilePath);	$s3Type = "ppt";	$s3UserId = $userid;		if(checkS3()){		//upload the file and get the full path		$s3filePath = uploadToS3($s3FilePath,$s3FileName,$s3Type,$s3UserId);				//unlink the local file		unlink($s3FilePath); 				print $s3filePath;	}	else{		print 'https://plus.showseeker.com/goplus/downloads/xmls/'.$s3FileName;	}	exit;	return;	/** * Creates a templated slide * * @param PHPPowerPoint $objPHPPowerPoint * @return PHPPowerPoint_Slide */function createTemplatedSlide(PHPPowerPoint $objPHPPowerPoint, $arrUser, $background){	// Create slide	$slide = $objPHPPowerPoint->createSlide();	if($background == '1'){	// Add background image    $slide->createDrawingShape()          ->setName('Background')          ->setDescription('Background')          ->setPath('ppt.sr/corps/'.$arrUser['corporationId'].'/bkground.png')          ->setWidth(955)          ->setHeight(720)          ->setOffsetX(0)          ->setOffsetY(0);	}	//USER INFO	$userInfo 	= createUserInfo($slide, $arrUser);	$logo 		= trim($arrUser['logo']);    return $slide;}function createBottomLn(&$row){	foreach ($row->getCells() as $cell) {		$cell->getBorders()->getTop()->setLineStyle(PHPPowerPoint_Style_Border::LINE_SINGLE)->setColor(new PHPPowerPoint_Style_Color('DDDDDDDD'));		$cell->getBorders()->getRight()->setLineStyle(PHPPowerPoint_Style_Border::LINE_NONE);		$cell->getBorders()->getLeft()->setLineStyle(PHPPowerPoint_Style_Border::LINE_NONE);				$cell->getBorders()->getBottom()->setLineStyle(PHPPowerPoint_Style_Border::LINE_SINGLE)->setColor(new PHPPowerPoint_Style_Color('DDDDDDDD'));		$cell->getActiveParagraph()->getAlignment()->setVertical(PHPPowerPoint_Style_Alignment::VERTICAL_CENTER);			}return $row;}function createBkgdColor(&$row){	$row->getFill()->setFillType(PHPPowerPoint_Style_Fill::FILL_GRADIENT_LINEAR)	               ->setRotation(90)	               ->setStartColor(new PHPPowerPoint_Style_Color('DDDDDDDD'))	               ->setEndColor(new PHPPowerPoint_Style_Color('DDDDDDDD'));return $row;}function createBkgdColorSpectrum(&$row){	/*$row->getFill()->setFillType(PHPPowerPoint_Style_Fill::FILL_GRADIENT_LINEAR)	               ->setRotation(90)	               ->setStartColor(new PHPPowerPoint_Style_Color('00808285'))	               ->setEndColor(new PHPPowerPoint_Style_Color('00808285'));*/return $row;}function noBorder(&$row){	foreach ($row->getCells() as $cell) {		$cell->getBorders()->getTop()->setLineStyle(PHPPowerPoint_Style_Border::LINE_NONE);		$cell->getBorders()->getRight()->setLineStyle(PHPPowerPoint_Style_Border::LINE_NONE);		$cell->getBorders()->getBottom()->setLineStyle(PHPPowerPoint_Style_Border::LINE_NONE);						$cell->getBorders()->getLeft()->setLineStyle(PHPPowerPoint_Style_Border::LINE_NONE);				$cell->getActiveParagraph()->getAlignment()->setVertical(PHPPowerPoint_Style_Alignment::VERTICAL_CENTER);	}return $row;}function cleanStr($string) {   $string = str_replace(' ', '_', $string); // Replaces all spaces with hyphens.   return preg_replace('/[^A-Za-z0-9\-]/', '', $string); // Removes special chars.}function findStationLogo($arrNetworks, $station){	$logo 	=	'';	foreach($arrNetworks as $network){		if(trim($network['networkId'])==$station){			$imgPath 	= str_replace('/downloads','',getcwd());			$logo 	 	= $imgPath.'/i/networklogos/'.$network['filename'];		}	}	return $logo;}//AMAZON S3 CHECKfunction checkS3(){	$r = true;	$host = 'showseeker.s3.amazonaws.com';	if($socket =@ fsockopen($host, 80, $errno, $errstr, 30)) {		fclose($socket);	} 	else {		$r = false;	}			return $r;}