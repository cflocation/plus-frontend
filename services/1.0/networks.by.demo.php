<?php	ini_set("display_errors",0);	$userid 		= $_GET['userid'];	$authtokin 	= $_GET['tokenid'];	$zoneid 		= $_GET['zoneid'];	//if there is anything blank return an error	if(empty($authtokin) || empty($userid)){		exit('error');	}	include_once('../../config/mysqli.php');	//Authentication	require_once('../../classes/Auth.php');	$auth = new Auth($con);	include_once('../../config/mysqli.php');	$sql	 	= "					SELECT 		demographics.id as demoid,									demographics.name as demoname,									tms_networks.callsign,									tms_networks.networkid					FROM 			zones 					inner join 	zonenetworks					on 			zones.id = zonenetworks.zoneid					inner join 	tms_networks 					on 			zonenetworks.networkid = tms_networks.networkid					inner join 	demographicnetworks					on				tms_networks.networkid = demographicnetworks.networkid					inner join 	demographics					on 			demographics.id = demographicnetworks.demographicid					where 		zones.id = {$zoneid}					order by 	callsign";		$result	= mysqli_query($con, $sql);	$demos 	= array();		$demoids = queryOfQuery($result, "demoid,demoname", true);		foreach($demoids as $thisdemo){		$netsbydemo = queryOfQuery($result, "networkid", false, "demoid", $thisdemo['demoid']);		$demos[] 	= array($thisdemo['demoid'] => $netsbydemo);	}	header('Content-Type: application/json');			print json_encode($demos);				function queryOfQuery($rs, // The recordset to query  $fields = "*", // optional comma-separated list of fields to return, or * for all fields   $distinct = false, // optional true for distinct records  $fieldToMatch = null, // optional database field name to match  $valueToMatch = null) { // optional value to match in the field, as a comma-separated list  $newRs 			= Array();  $row 				= Array();  $valueToMatch 	= explode(",",$valueToMatch);  $matched 			= true;  mysqli_data_seek($rs, 0);  if($rs) {    while ($row_rs = mysqli_fetch_assoc($rs)){      if($fields == "*") {        if($fieldToMatch != null) {          $matched = false;          if(is_integer(array_search($row_rs[$fieldToMatch],$valueToMatch))){             $matched = true;          }        }        if($matched) $row = $row_rs;      }else{        $fieldsArray=explode(",",$fields);        foreach($fieldsArray as $field) {          if($fieldToMatch != null) {            $matched = false;            if(is_integer(array_search($row_rs[$fieldToMatch],$valueToMatch))){              $matched = true;            }          }          if($matched) $row[$field] = $row_rs[$field];        }      }       if($matched)array_push($newRs, $row);    };    if($distinct) {      sort($newRs);      for($i = count($newRs)-1; $i > 0; $i--) {        if($newRs[$i] == $newRs[$i-1]) unset($newRs[$i]);      }    }  }    return $newRs;	}					?>