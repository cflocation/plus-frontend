function getZonesByMarketId(id){	if(parseInt(id) === 0 || id === "DMA"){        return;    }		$('#zone-selector,#dma-selector').html('');			var dmaId;	//var lastZoneId		= userSettings.lastZoneId;	var dmasList  		= [];	var zoneMap 		= [];	var DMAZones 		= [];	var mktId			= parseInt(id);	var newZoneId		= 0;	//SETTING UP VARIABLES WITH NEW ZDMAS AND ZONES    $.each(marketzones, function(h, zone) {    	if(parseInt(zone.marketId) === mktId){	    	if (zone.isdma === "NO") {				allzones.push(zone);				if(newZoneId === 0){					newZoneId = zone.id;				}				DMAZones.push({'id':zone.id,'name':zone.name,'syscode':zone.sysCode,'dmaId':zone.dmaId});			}			else{				if(dmasList.indexOf(zone.dmaId) === -1){					dmasList[zone.dmaId] = zone;				}			}			zoneMap[zone.id] = zone;    	}    });		//SPECTRUM REACH USERS	if([46,14].indexOf(parseInt(corpid)) !== -1){	    $.each(allMarkets, function(h, region) {	    	if(parseInt(region.id) === parseInt(id)){		    	uniqueDmaList = region.dmas;	    	}	    });	    //datagridZones.populateDataGrid(DMAZones);	}	else{		//GETTING LIST OF ZONES AND DMAS BY REGION		uniqueDmaList = dmasList.reduce(	function(acc, cur, i) {														acc[i] = cur;														return acc;													}, {});	}		zonesArray = zoneMap.reduce(function(acc, cur, i) {		acc[i] = cur;		return acc;	}, {});				userSettings.lastMarketId 	= mktId;	if(zonesArray[lastZoneId] !== undefined){		dmaId 	= zonesArray[lastZoneId].dmaId;	}	else{//SELECTS FIRST ZONE FROM THE NEW REGION		lastZoneId	= newZoneId;		dmaId 	= zonesArray[lastZoneId].dmaId;	}		userSettings.lastZoneId = lastZoneId;	userSettings.lastDMAId	= dmaId;				//SPECTRUM REACH 	if([46,14].indexOf(parseInt(corpid)) !== -1){		$.when(populateDmas(dmaId))		.then(zoneListBuilder(mktId, 'zone-selector',dmaId))		.then(broadcastZone(mktId, dmaId))		.then(function(){			$('#zone-selector').val(lastZoneId).trigger('change');		});	}	else{		$.when(zoneListBuilder(mktId, 'zone-selector',dmaId))		.then(broadcastSeparator())		.then(function(){	if(roles.ezRatings){								broadcastOption('zone-selector', dmaId);							}							else{								dmaListBuilder('zone-selector',dmaId);							}						})		.then(function(){			$('#zone-selector').val(lastZoneId).trigger('change');		});	}		if(ezgridsOpen){		if(ezgrids){			$.when(ezgrids.setDmas())			.then(ezgrids.setZones());		}	}	return false;};function ezGridsSynchZones(zoneid){	try{				if(isEzgridsOpen){							$(ezgrids.document).contents().find('#zones').empty();		        $.each(marketzones, function(h, market) {		            if(market.marketid == $('#market-selector').val()){			            $.each(market.zones, function(i, value) {			                if (value.isdma == "NO") {							var label = value.name;							$(ezgrids.document).contents().find('#zones').append($("<option></option>").attr("value", value.id).text(label));		                }		            });		            		            $(ezgrids.document).contents().find('#zones').append($("<option class='dma-select dma-select-title'></option>").attr("value", "DMA").text("===== DMAS ====="));		            $.each(market.zones, function(i, value) {			                if (value.isdma == "YES") {							var label = value.name;							$(ezgrids.document).contents().find('#zones').append($("<option class='dma-select dma-select-title'></option>").attr("value", value.id).text(label));		                }		            });		            	            }	        });						$(ezgrids.document).contents().find('#zones').trigger('create');			$(ezgrids.document).contents().find('#zones').val(zoneid);			$(ezgrids.document).contents().find('#ezgridsform').submit();										//ezgrids.selectZoneFromSS(zoneid);		}	}	catch(err){		//console.log(err);	}}function isEzgridsOpen() {    if (!ezgrids) {	        return false; //'EzGrids' has never been opened!";    } else {        if (ezgrids.closed) {             return false; //'EzGrids' has been closed!";        } else {            return true;// 'EzGrids' has not been closed!";        }    }	}/* button/select events */function zoneSelected(ezSynch) {	marketid 	= $('#market-selector').val();    zone 		= $('#zone-selector :selected').text();    zoneid 		= $('#zone-selector').val();    if(zoneid === null || zoneid === "DMA"){		zone 		= '';		zoneid 	= 0;		return;    }    populateNetworkList(zoneid);        datagridSearchResults.emptyGrid();    //set the user settings and save them    userSettings.lastZoneId = zoneid;    saveUserSettings();		if(isEzgridsOpen()){		ezGridsSynchZones(zoneid);	}};//appends list of DMAs to a Select Boxfunction populateDmas(dmaId){	for(var d=0; d<uniqueDmaList.length; d++){		$('#dma-selector').append($("<option></option>").attr("value", uniqueDmaList[d].id).text(uniqueDmaList[d].name));	};	$('#dma-selector').trigger('create');	$('#dma-selector').val(dmaId);	return false;};//appends list of DMAs to a Select Boxfunction broadcastSeparator(){	if(!$.isEmptyObject(uniqueDmaList)){			$('#zone-selector').append($("<option class='dma-select dma-select-title'></option>").attr("value", "DMA").text("===== Broadcast ====="));	}	return false;};function broadcastOption(selectorList, dmaId){	if(!$.isEmptyObject(uniqueDmaList)){		for(var d=0; d<uniqueDmaList.length; d++){					if(parseInt(uniqueDmaList[d].id) === parseInt(dmaId)){				$('#'+selectorList).append($("<option class='dma-select dma-select-title'></option>").attr("value", uniqueDmaList[d].id).text(uniqueDmaList[d].name));				$('#'+selectorList).trigger('create');				break;			}		}	}	return false;};function dmaListBuilder(selectorList, dmaId){	if(!$.isEmptyObject(uniqueDmaList)){				var arrDMA = [];		for(var d in uniqueDmaList){			arrDMA.push(uniqueDmaList[d]);		}				arrDMA.sort(function(a, b){											var keyA = a.dmaName, keyB = b.dmaName;											if(keyA < keyB) return -1;											if(keyA > keyB) return 1;											return 0;										});						for(var d =0; d <arrDMA.length; d++){			$('#'+selectorList).append($("<option class='dma-select dma-select-title'></option>").attr("value", arrDMA[d].id).text(arrDMA[d].name));		}		$('#'+selectorList).trigger('create');	}	return false;};//appends list of DMAs to a Select Boxfunction broadcastZone(marketId, dmaId){	$.each(marketzones, function(h, zone){		if(parseInt(zone.marketId) === parseInt(marketId) && zone.isdma === "YES" && parseInt(zone.dmaId) === parseInt(dmaId)){			$('#zone-selector').append($("<option class='dma-select dma-select-title'></option>").attr("value", "DMA").text("===== Broadcast ====="));			$('#zone-selector').append($("<option class='dma-select dma-select-title'></option>").attr("value", zone.id).text(zone.name));			return;		}	});      	$('#zone-selector').trigger('create');	return false;};//appends list of Zones to a Select Boxfunction zoneListBuilder(marketId, selectorList,dmaId){	if([46,14].indexOf(parseInt(corpid)) !== -1 && dmaId !== undefined){		var mktId = parseInt(marketId);		var DMAID = parseInt(dmaId);			for(var m=0; m< allMarkets.length; m++){			if(parseInt(allMarkets[m].id) === mktId){				for(var z=0; z<allMarkets[m].zones.length;z++){					if(allMarkets[m].zones[z].dmaId === DMAID && allMarkets[m].zones[z].isdma === 'NO'){						$('#zone-selector').append($("<option></option>").attr("value", allMarkets[m].zones[z].id).text(allMarkets[m].zones[z].name));					}				}			}		}			}	else{		$.each(marketzones, function(h, zone) {			if (parseInt(zone.marketId) === parseInt(marketId) && zone.isdma === "NO"){				$('#'+selectorList).append($("<option></option>").attr("value", zone.id).text(zone.name));			}		});	}		return false;};//BUILD LIST OF ZONE OPTIONSfunction filterZones(){	var dmaId  = parseInt($('#dma-selector').val());	userSettings.lastDMAId	= dmaId;	$('#zone-selector').html('');		if([46,14].indexOf(parseInt(corpid)) !== -1){		$.when(zoneListBuilder(marketid, 'zone-selector',dmaId))		.then(broadcastZone(marketid, dmaId))		.then($('#zone-selector').val(zoneid).change());			}	else{		$.when(zoneListBuilder(marketid, 'zone-selector',dmaId))		.then(broadcastSeparator())		.then(broadcastOption('zone-selector', dmaId))		.then($('#zone-selector').val(zoneid).change());			}	if(ezgridsOpen){		if(ezgrids){			ezgrids.setZones();		}	}};