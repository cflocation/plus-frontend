function synchMarketAndZone(mktid, znid){ 	 	if(parseInt(znid) === 0 || znid === null){ 		return; 	}   	$.each(marketzones, function(h, market) {		if(parseInt(market.marketid) === parseInt(mktid)){			$.each(market.zones, function(i, value) {				  	if(parseInt(value.id) === parseInt(znid)){			          					// proposal located in a different market					if( $('#market-selector').val() != market.marketid ){							$('#market-selector').val(market.marketid);						updateZonesList(market, znid);						  // proposal is located in market					}else if( $('#zone-selector').val() != znid){						$('#zone-selector').val(znid);						zoneSelected('yes');					}					return;				}			});		}	});			}function autoSelectMarketAndZone(znid){ 	 	if(parseInt(znid) === 0 || znid === null){ 		return; 	}   	$.each(marketzones, function(h, market) {	      $.each(market.zones, function(i, value) {	          if (value.id == znid) {					  // proposal located in a different market					  if( $('#market-selector').val() != market.marketid ){							$('#market-selector').val(market.marketid);							updateZonesList(market, znid);					  // proposal is located in market					  }else if( $('#zone-selector').val() != znid){							$('#zone-selector').val(znid);			            zoneSelected();					  }					  return;	          }	      });	});	}function compare(a,b) {  if (a.name < b.name)     return -1;  if (a.name > b.name)    return 1;  return 0;}function getMarketZones(mktid){	$.each(marketzones, function(h, thismarket) {	       if (thismarket.marketid == mktid) {			  return thismarket;       }	});	}//updates the list of zones for the settings panelfunction updateZonesList(thismarket, znid){		$('#zone-selector')[0].options.length = 0;				zoneListBuilder(thismarket.zones, 'zone-selector');		dmaListBuilder(thismarket.zones,'zone-selector');            $('#zone-selector').val(znid);		zoneSelected();                  return;}// Updates the list of Zones and DMAs for the clone of zonesfunction updateCloneZonesList(thismarket){	$('#clone-zone-selector')[0].options.length = 0;		zoneListBuilder(thismarket.zones,'clone-zone-selector');		return;}//appends list of Zones to a Select Boxfunction zoneListBuilder(zns, selectorList){      $.each(zns, function(i, value) {                    if (value.isdma == "NO") {              $('#'+selectorList).append($("<option></option>").attr("value", value.id).text(value.name));          }                });}//appends list of DMAs to a Select Boxfunction dmaListBuilder(zns, selectorList){      $('#'+selectorList).append($("<option class='dma-select dma-select-title'></option>").attr("value", "DMA").text("===== DMAS ====="));      $.each(zns, function(i, value) {                if (value.isdma == "YES") {                        $('#'+selectorList).append($("<option class='dma-select'></option>").attr("value", value.id).text(value.name));          }      });	  $('#'+selectorList).trigger('create');}